import {  Paper, Table, TableBody, Button, TableCell, TableContainer, TableHead, TableRow, Typography, Pagination } from '@mui/material'
import axios from 'axios'
import React, { useEffect, useState } from 'react';

import './historique.scss';
import Search from '../search/search';
import { useAuth } from '../../auth/auth';


const Search = ( ) => {

  
    
      
  return (
    <div className='fake-body'>
      <div className='search-div'>
        <Search />
      </div>
      <div className="main-content">
        <div className="row" style={{width: '100%'}}>
          <div className="col-md-12">
            <div className="table-wrapper">
              <div className="table-title">
                <div className="row">
                  <div className="col-sm-6 p-0 flex justify-content-lg-start justify-content-center">
                    <Typography variant="h5" ml="2"> Historique des commandes</Typography>
                  </div>
                </div>
              </div>

              <TableContainer component={Paper}>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell sx={{textAlign: 'center', fontSize: '16px'}}>N°</TableCell>
                      <TableCell sx={{textAlign: 'center', fontSize: '16px'}} >Articles</TableCell>
                      <TableCell  sx={{textAlign: 'center', fontSize: '16px'}} >Quantité</TableCell>
                      <TableCell sx={{textAlign: 'center', fontSize: '16px'}}>Prix</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {stocks && stocks.length > 0  ? currentItems.map((element, id) => (
                      <TableRow key={id}>
                        <TableCell sx={{textAlign: 'center'}}>{id+1}</TableCell>
                        <TableCell sx={{textAlign: 'center'}}>{element.item_name}</TableCell>
                        <TableCell sx={{textAlign: 'center'}}>{element.quantity}</TableCell>
                        <TableCell sx={{textAlign: 'center'}}>{element.price}</TableCell>
                      </TableRow>
                    )) : <p>{error || 'Chargement en cours '}</p>}
                  </TableBody>
                </Table>
              </TableContainer>
              <Pagination
                  count={Math.ceil(stocks.length / itemsPerPage)}
                  page={currentPage}
                  onChange={handlePageChange}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Historique
